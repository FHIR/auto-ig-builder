#!/bin/bash

set -e

reindex_files() {
    cd ~/uploading/www/ig
    echo "reindexing"
    AUTOCLEAN_AFTER_DAYS=${AUTOCLEAN_AFTER_DAYS:-"+90"}
    AUTOCLEAN_EXEMPTION_REGEX=${AUTOCLEAN_EXEMPTION_REGEX:-"./\(HL7\|FHIR\|IHE\)/[^/]*/branches/\(main\|master\)"}
    find . -maxdepth 4 -mindepth 4  -type d -ctime "$AUTOCLEAN_AFTER_DAYS" -not -regex "$AUTOCLEAN_EXEMPTION_REGEX" -exec rm -rf {} \;
    find . -mindepth 5 -maxdepth 6 -name build.log | sed 's|^./||'  | jq --raw-input . | jq -s . > builds.json

    for f in `find . -mindepth 5  -maxdepth 5 -name qa.json`; do
        jq '. + {repo: input_filename[2:]}' $f;
    done | jq --slurp  '.' > qas.json

    find . -name '__default' -type l ! -exec test -e {} \; -delete
    for i in {1..4}; do
        NUM=$(find . -type d -empty -delete | wc -l)
        if [ $NUM -eq 0 ]; then
            break
        fi
    done
}

process_reindexing() {
    # Get the most recent semaphore file
    cd ~/reindex_queue
    latest_request=$(ls reindex_request_*.sem 2>/dev/null | sort -r | head -n 1)

    # If no request file is found, exit function
    if [ -z "$latest_request" ]; then
        return
    fi

    reindex_files

    # Delete all semaphore files up to and including the processed one
    cd ~/reindex_queue
    for file in $(ls reindex_request_*.sem 2>/dev/null | sort); do
        rm "$file"
        if [ "$file" == "$latest_request" ]; then
            break
        fi
    done
}

while true; do
    process_reindexing
    sleep 10
done
